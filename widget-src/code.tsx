const { widget } = figma;
const {
  AutoLayout,
  Text,
  Frame,
  usePropertyMenu,
  useSyncedState,
  useWidgetId,
  SVG,
  Image,
} = widget;

type CardType = {
  value: string;
  figure?: string;
};

type DeckType = {
  id: string;
  logo: string;
  front: string;
  back: string;
  name?: string;
  showName?: boolean;
  description: string;
  cards: CardType[];
};

const MONOPOLY_CHANCE_LOGO = `<svg width="323" height="192" viewBox="0 0 323 192" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M101.142 81.7382C102.055 81.1349 102.778 80.1921 103.386 79.287C106.086 73.0649 110.003 67.6725 114.643 62.8456C123.998 52.9656 137.65 43.1233 154.041 41.0493C155.638 41.1247 157.35 40.5591 158.795 41.2378L168.036 51.0801C168.492 51.4572 169.063 51.6458 169.177 52.2114C169.025 52.4377 168.949 52.7393 168.721 52.8902C165.146 54.9265 161.153 56.0201 157.046 56.8497C147.88 58.5467 139.058 61.4126 130.501 64.4671C118.902 68.8791 109.623 75.4407 102.816 83.6237L101.142 81.7382Z" fill="white"/><path d="M321.331 111.527C315.437 106.134 309.694 100.591 303.799 95.1986L302.583 94.0673L286.534 79.2096L280.564 73.6663C279.765 72.6482 278.282 72.3088 278.586 70.4987C278.814 70.0462 278.776 66.1621 277.94 65.0308C276.799 64.2011 277.445 62.1271 276.913 60.7696C276.723 59.4497 276.608 58.1299 275.886 57.1871C275.125 55.5279 272.958 54.9623 271.436 53.831C271.36 52.6243 270.828 51.7946 270.296 51.0404C267.976 48.8155 263.564 49.2681 260.598 50.1731C259.267 50.4371 258.392 51.8323 257.023 51.6061C245.12 40.9342 233.749 29.8852 222.15 18.9871C221.618 18.61 221.466 17.9312 221.276 17.2901C220.667 15.103 221.96 13.4437 223.405 12.3878C225.991 10.7286 228.349 13.142 231.011 13.0666C233.331 13.1798 235.271 11.9353 236.145 10.3892C236.183 10.0498 236.259 9.89899 236.411 9.67274C236.221 8.95625 236.64 8.61688 236.602 7.9004H236.678C236.678 6.7691 236.259 5.90173 236.031 4.84585C234.51 2.05533 230.935 0.320702 227.17 0.132152C224.432 -0.320365 221.808 0.471524 219.412 1.26343C213.556 3.67686 210.133 8.12662 209.334 14.3487L209.258 14.3488C209.144 19.3642 210.399 23.3237 213.099 26.3028C224.204 36.8615 235.499 47.3826 246.603 58.0921C247.288 59.4497 245.843 60.5056 245.843 62.014L245.767 62.014C245.538 63.7486 246.109 64.8422 246.337 66.3506C246.565 67.3311 247.44 68.123 247.136 69.2542C247.136 70.5364 245.082 69.6314 245.006 70.9135C243.105 72.271 241.659 74.0811 239.796 75.4764C238.693 76.1929 238.161 74.8354 237.286 74.7222C230.517 80.9066 221.048 87.883 212.377 92.7098C211.806 92.8984 211.16 93.3885 210.665 92.8229C210.057 91.5408 210.247 89.693 209.943 88.26C209.563 86.9025 209.601 85.2055 208.308 84.5267C208.003 84.753 207.927 85.2055 207.851 85.7335C207.851 86.1106 207.661 86.3745 207.547 86.6385C206.596 89.4667 205.037 91.8425 202.071 93.2754C201.615 93.3509 201.12 93.0869 201.006 92.6721C200.436 87.5812 199.751 82.679 198.002 78.4555C195.073 70.8004 190.814 64.0126 184.882 58.5069C183.779 57.0362 181.915 56.0935 180.546 54.8114C180.052 54.1703 179.101 53.9064 178.987 52.8883C179.976 51.9078 181.231 51.1159 182.41 50.324C185.566 47.3449 188.951 44.5167 189.787 39.9161C189.673 39.5013 189.521 39.1241 189.369 38.6716C188.875 37.9551 187.696 37.3895 186.441 37.6535C185.414 37.9174 184.958 38.5962 184.425 39.2749C182.486 43.3853 179.025 46.4398 175.108 49.1926C174.652 49.2681 174.081 49.532 173.663 49.268C171.876 47.9482 170.506 46.2889 168.605 45.0822C168.073 44.2526 167.16 43.7247 166.475 42.8951C164.117 39.8783 161.341 37.2009 159.212 34.0333L158.945 33.3922C155.181 29.0556 152.366 23.9271 149.78 18.7985C148.906 16.9508 147.917 15.2915 145.635 14.5373C139.17 12.8781 132.591 14.8013 126.659 16.2342C113.881 20.7594 102.928 28.0751 94.9039 36.6353C92.0897 39.5012 89.6559 42.7443 87.5642 46.1004C86.4234 47.2317 86.0811 48.7778 85.0924 50.0599C84.5599 51.9454 83.4571 53.3407 83.0388 55.2639C82.1641 57.0363 82.0119 60.8827 83.0768 62.542C89.6559 67.9345 95.4743 74.0057 99.9998 80.8312C100.342 81.1706 100.456 81.887 101.179 81.6231C102.129 81.0574 102.814 80.077 103.422 79.172C106.123 72.9498 110.04 67.5573 114.679 62.7305C124.034 52.8505 137.649 43.0459 154.04 40.8964C155.637 40.9719 157.386 40.444 158.831 41.0473C159.136 41.4244 159.554 41.8392 159.25 42.2917C155.979 42.8197 152.633 43.1967 149.59 44.2526L149.59 44.4789C152.404 47.2695 155.181 50.0977 158.185 52.6996L158.945 53.0768C161.798 52.7374 164.498 51.9455 167.084 50.8896H168.072C168.529 51.2667 169.099 51.4553 169.251 52.0586C169.061 52.2472 169.023 52.5865 168.795 52.7374C165.22 54.6983 161.189 55.905 157.12 56.6969C147.917 58.3561 139.132 61.2598 130.576 64.2389C118.939 68.6887 109.735 75.2501 102.852 83.3577C100.038 86.7516 98.4027 90.7866 97.2618 95.3872H97.1857C97.1096 95.8397 97.0716 96.2545 97.0716 96.707C96.4632 103.947 99.2013 109.453 105.02 112.432C107.073 113.563 109.469 113.752 111.827 114.28C112.245 114.845 112.778 115.298 112.778 116.128C112.512 116.241 112.131 116.392 111.827 116.241C93.4208 112.621 75.585 106.172 60.183 96.707C59.6126 96.3676 59.0422 96.0283 58.4717 95.6134L57.5971 95.3495C55.9238 97.3104 54.5167 94.4068 53.0716 93.9543C52.0448 93.464 51.1701 91.9933 49.6869 92.559C48.8503 92.4081 48.8883 91.6162 48.3559 91.2391C47.215 89.2028 45.3516 87.7321 44.1727 85.7334C43.9825 83.8857 43.4121 82.1888 43.7544 80.1901H43.8304C43.7163 79.3982 44.0205 78.3423 43.5262 77.8521C42.9557 77.2111 41.7768 77.3242 40.9402 77.475C36.2626 78.1915 34.0949 81.7739 33.1822 85.6203H33.1061L33.0301 86.6008L32.954 86.6008L32.916 88.2224L32.8399 88.2223C32.992 88.5994 32.6498 88.7125 32.4216 88.9388C27.1355 91.0128 21.6592 93.3509 16.8295 96.1791C16.5633 96.3677 16.2971 96.5562 15.9929 96.707C9.37575 101.006 2.03605 105.946 0.400788 113.601L0.324742 113.601L0.248696 114.732L0.0966041 114.732C0.172663 115.864 0.628999 116.995 0.286734 118.164C0.248704 118.277 0.324781 118.503 0.0966041 118.503C0.324781 119.031 -0.207631 119.258 0.0966041 119.71C0.0205452 122.123 3.48123 121.935 3.93758 123.971C5.15452 125.178 7.13199 124.198 8.53908 123.783C16.9816 118.88 26.3368 115.487 36.4527 114.129C38.3541 113.978 40.6359 113.752 42.4613 114.28C43.8304 115.713 46.1502 116.429 47.4052 117.975C47.3671 119.295 47.0249 120.389 46.6826 121.482C46.6826 121.859 46.4164 122.123 46.3784 122.463C46.3023 122.915 46.4164 123.255 46.7967 123.481C59.8408 131.438 75.0526 135.888 90.6826 138.716C101.559 140.677 112.93 141.242 124.377 141.808L124.947 142.072L124.757 142.336C123.16 142.864 121.372 142.977 119.813 143.543C119.471 151.726 116.733 168.846 115.174 175.898C122.019 185.627 133.352 192.038 146.244 192C154.838 192 162.14 189.888 168.529 185.061L169.328 183.44C176.515 172.391 190.89 146.069 193.248 130.834C193.362 130.269 193.476 129.628 194.047 129.439C194.047 129.439 195.796 128.836 194.693 129.251C208.117 124.688 229.49 117.523 254.323 98.0269C254.361 97.235 253.791 96.971 253.487 96.2922C253.487 95.8397 253.639 95.4626 253.829 95.1232C254.285 94.5198 255.084 94.105 255.502 93.464C256.947 92.1064 258.659 90.7112 259.647 89.2782C259.343 88.3732 260.18 88.0714 260.522 87.4304C262.385 85.658 264.135 83.6217 267.215 82.8298C268.736 82.3773 270.296 79.7753 271.893 81.8116C276.646 86.3745 281.628 90.7111 286.534 95.1232C289.577 97.8383 292.543 100.629 295.433 103.495C301.556 108.736 307.26 114.242 313.117 119.672C314.143 120.313 314.714 121.935 316.501 121.369C319.772 120.087 322.092 117.938 322.814 114.732L322.89 114.732C323.385 113.111 322.092 112.583 321.331 111.527Z" fill="black"/><path d="M232.762 6.73367C233.067 7.33703 233.028 8.05351 233.067 8.84541C232.496 9.78816 231.165 10.0522 230.024 9.90131C227.4 8.05353 223.255 7.94037 220.517 9.75044C219.794 10.6178 218.539 11.1834 218.349 12.3524C218.197 12.6541 217.893 12.8049 217.969 13.3329C217.855 13.5968 217.589 13.8608 217.589 14.1625C217.284 15.52 217.208 18.1598 218.197 19.2911C218.539 20.3092 219.414 20.7994 219.794 21.7045C221.848 24.1933 224.396 26.2674 226.868 28.4923L231.812 33.0928C233.029 34.4504 234.512 35.8457 235.919 37.0901C241.585 42.7089 247.708 48.026 253.374 53.7201C253.755 54.8514 251.777 54.776 251.016 55.3039C250.56 55.6056 250.028 55.8319 249.533 55.7187C248.088 54.8137 247.023 53.5316 245.806 52.4757C236.071 42.9728 225.803 33.9225 215.991 24.495C213.862 22.6095 212.949 19.8944 212.531 16.8399L212.417 14.615H212.493L212.569 13.71L212.645 13.71C213.71 9.10939 216.372 5.26302 221.62 3.90546C225.689 3.18898 230.328 4.01856 232.762 6.73367Z" fill="white"/><path d="M132.897 20.0067C135.939 27.247 140.427 33.5069 145.142 39.6158C145.371 39.7667 145.218 40.2192 145.256 40.5586C142.1 41.7276 138.791 42.8212 135.673 44.2541C130.653 46.5922 126.47 49.3827 122.287 52.2487C120.651 52.211 120.385 50.514 119.396 49.6844C115.023 44.3673 110.003 39.465 105.021 34.6004C104.983 34.1856 104.831 34.0348 104.831 33.5823C107.797 30.3392 112.095 28.039 116.126 25.5501C120.803 22.9481 125.861 20.5724 131.147 19.1771C132.098 18.9886 132.631 19.4411 132.897 20.0067Z" fill="black"/><path d="M268.772 53.9783C269.418 54.6948 269.266 56.0523 269.723 56.9573C270.673 57.4475 272.118 57.2967 272.993 58.0886C274.21 59.0691 274.324 60.6906 274.59 62.2367C274.172 62.5761 274.818 62.7646 274.59 63.2172V64.273L274.514 64.2731C274.324 64.537 274.59 65.0272 274.248 65.2158C275.047 66.3848 275.579 67.6669 275.313 69.5901H275.237C274.895 73.248 272.651 76.0008 269.456 77.5846C268.696 77.5846 267.669 78.1503 267.099 77.5847C267.289 76.8682 267.555 75.9254 268.087 75.4729C270.369 73.2103 270.978 70.2689 270.978 68.5343C270.939 68.2703 270.331 67.2898 270.065 67.1767C269.456 68.6851 268.467 70.2689 266.718 72.6823C265.691 74.0776 264.474 75.2843 262.573 75.9631C261.698 76.1516 260.862 75.7745 260.481 75.2466C260.139 74.7564 260.215 74.0776 260.215 73.3988C261.546 71.9281 263.258 70.6083 264.094 68.7228C265.958 66.3471 266.186 63.3303 266.376 62.3121C266.338 62.1236 265.729 62.0482 265.425 62.199C263.524 64.2353 262.155 67.7047 259.645 69.1376C259.074 69.2508 258.466 69.1754 258.238 68.7983C258.009 68.1949 257.591 67.2521 257.819 66.5734V65.97C257.933 65.706 258.162 65.4043 258.124 65.0649C258.352 64.0845 259.036 63.4812 259.379 62.6138C259.15 62.0859 259.721 62.199 259.873 61.9728C261.242 60.3889 263.029 59.1445 263.562 56.8819L263.638 56.8819C263.752 55.7129 263.219 54.657 262.725 53.7143C262.611 52.6207 264.094 52.8847 264.817 52.4699C266.528 51.9797 268.011 52.9224 268.772 53.9783Z" fill="white"/><path d="M89.2406 55.6083C94.945 60.2089 99.5465 65.526 103.882 71.1071C103.996 71.371 104.072 71.5973 104.034 71.9367C103.92 72.2761 103.578 72.6155 103.54 73.0303C103.045 73.5959 102.779 74.3124 102.323 74.8403C101.562 75.142 101.258 74.3878 100.878 74.0861C96.9986 69.033 92.321 64.3947 87.4912 60.0581C86.9588 59.7564 87.263 58.9268 87.225 58.3611L87.3011 58.3612C87.4152 57.343 87.8715 56.7396 88.1757 55.91C88.2518 55.6083 88.8603 55.2312 89.2406 55.6083Z" fill="black"/><path d="M176.707 56.8127C177.315 57.2652 178.114 57.6801 178.228 58.5474C176.973 59.4147 174.767 59.7164 175.224 61.8281C175.452 62.2052 175.832 62.507 176.365 62.6578C177.239 62.6955 177.734 61.979 178.494 61.6773C183.02 60.9608 185.111 64.7696 187.013 67.183C188.952 70.1621 190.968 72.9149 192.223 76.4219C192.984 77.6286 193.478 79.0993 193.896 80.5699C194.695 81.8898 194.847 83.6999 195.341 85.246C195.608 86.7921 195.95 88.2627 196.102 89.922C195.836 91.5435 196.71 92.5617 196.406 94.2964C196.026 95.2768 194.695 94.7112 193.782 94.7866C190.017 93.9947 186.366 92.7125 182.107 93.0896C181.004 92.3731 181.156 90.8647 180.358 89.9974C179.331 88.4513 178.19 86.8675 175.984 86.0379C174.73 86.0002 173.436 86.3773 172.258 86.7167C172.181 86.8675 172.067 87.2823 172.334 87.32C174.349 88.9415 176.669 90.4122 176.517 93.5798C176.365 93.5798 176.327 93.7684 176.327 93.8438C176.251 95.503 173.893 95.7293 172.828 96.7098C172.714 97.5771 173.056 98.1427 173.398 98.6329C174.996 100.292 177.239 98.7461 178.951 98.1805C181.499 95.2014 187.127 95.8802 190.702 97.0115C195.988 99.4626 202.567 97.6148 206.408 94.2586C206.826 93.9192 206.94 94.4849 206.978 94.7489V95.4276C207.092 96.2949 206.446 96.6343 206.484 97.4262C206.37 97.7656 206.142 98.0673 206.142 98.369C203.746 104.591 198.726 109.72 190.74 111.153C187.089 111.605 183.438 111.077 180.358 109.456C179.711 109.343 179.787 109.87 179.521 110.134C177.277 114.999 173.436 118.808 168.074 121.485C161.419 124.54 151.227 124.012 146.131 119.185C146.017 118.77 146.322 118.695 146.436 118.431C151.646 119.222 156.361 116.281 158.415 112.812C159.67 110.964 160.468 108.815 162.028 107.193C164.347 104.893 167.086 102.555 170.85 101.537C171.383 101.235 171.573 100.82 171.573 100.141C171.383 99.5757 171.117 99.0854 170.394 98.8215C164.842 98.5198 161.229 102.479 158.453 105.534C157.768 106.514 157.16 107.495 156.551 108.551L156.551 108.852C156.437 109.192 156.057 109.493 156.057 109.87C155.791 109.984 155.867 110.21 155.791 110.436C154.878 112.699 152.558 114.32 149.82 114.999C145.447 115.791 141.112 113.302 138.982 110.587C138.335 110.021 138.373 108.777 137.194 108.815C137.08 111.039 138.145 112.623 138.868 114.471C141.606 121.41 149.668 126.463 158.871 126.764C163.739 126.915 168.15 125.709 171.991 123.484C174.996 122.088 177.277 120.128 179.255 117.865C180.662 116.922 182.678 118.619 183.438 116.809C184.199 116.13 184.351 114.999 185.53 114.584C187.774 114.622 190.169 114.66 192.337 114.32C192.755 114.433 192.793 114.773 192.755 115.263H192.679C188.154 125.256 176.403 133.515 162.332 132.76C149.782 132.383 139.02 125.558 131.87 118.242C131.262 117.563 131.262 116.432 130.882 115.527C129.931 114.509 129.589 116.13 128.79 116.394C126.09 118.167 121.488 117.978 118.788 116.055C116.468 114.207 114.301 111.982 115.023 108.324C115.175 108.4 115.137 108.211 115.137 108.06C115.67 106.25 117.305 105.006 119.435 104.478C120.081 104.365 120.918 104.214 121.146 103.611C121.146 102.555 120.195 102.14 119.359 101.763C117.952 100.896 115.632 103.045 115.442 100.745C115.251 100.104 115.137 99.3872 115.023 98.5198L114.985 97.0491L115.061 96.1441H115.137C115.594 94.334 116.05 92.5994 116.811 91.0156C118.18 88.5267 119.853 86.1887 121.716 83.9639C125.025 80.3814 129.094 77.176 133.391 74.197C137.118 71.5573 141.834 69.3701 146.245 67.4846C141.758 67.4092 138.031 69.521 134.152 71.1048C122.819 76.6858 113.692 83.6999 108.825 93.8061C107.037 96.8606 106.467 102.932 108.748 106.024L109.889 107.683C110.118 107.91 110.003 108.4 110.003 108.852C108.939 109.531 107.646 108.475 106.695 107.985C102.854 105.685 101.561 100.782 102.55 95.8802C104.451 88.8661 109.129 83.7753 114.567 79.2878C122.059 72.9149 132.517 67.7486 143.013 64.7318C151.608 61.4888 161.267 60.81 169.824 57.303C171.497 56.9259 172.828 55.4552 174.653 55.606L176.707 56.8127Z" fill="white"/><path d="M260.298 56.3611C260.412 57.0776 259.993 57.5678 259.689 58.0203C258.662 59.1139 257.445 60.019 256.419 61.188V61.4896C256.305 61.829 256.229 62.2061 255.924 62.4324C254.403 64.5441 254.327 68.7677 255.696 71.1057C256.305 71.8599 256.381 72.9157 257.065 73.5945C257.027 76.4227 258.51 78.1951 261.515 78.5345C262.313 79.251 263.112 80.0429 263.91 80.7594C263.91 81.2873 263.454 81.3627 263.074 81.6644C261.248 82.2678 259.917 83.5121 258.814 84.7566C258.358 84.9828 257.788 85.4731 257.255 85.096C255.088 82.5694 253.49 79.7035 251.323 77.1769C250.638 76.0456 249.764 75.1783 249.155 74.047L249.155 73.7453C249.459 73.4436 249.497 72.9534 249.878 72.6517C250.448 71.709 250.866 70.6154 250.676 69.0693C249.725 67.5232 248.585 66.2411 248.699 63.8654V62.6586C249.269 60.3583 250.904 58.9631 252.768 57.5678C254.783 56.0971 257.483 56.1348 259.993 55.984L260.298 56.3611Z" fill="white"/><path d="M277.672 76.0046C286.875 84.1499 295.66 92.6346 304.787 100.855C309.085 105.192 313.914 109.227 318.212 113.564C318.44 114.167 319.352 114.318 319.048 115.449C318.554 116.316 318.021 117.297 316.842 117.636C315.778 117.636 315.245 116.882 314.675 116.392C310.796 112.847 307.259 109.34 303.418 105.607C299.881 102.477 296.459 99.3846 293.074 96.1793C286.837 90.5228 280.677 84.791 274.554 79.0214C273.641 78.1163 275.124 77.7015 275.352 77.0227C276.151 76.6833 276.455 75.4012 277.672 76.0046Z" fill="white"/><path d="M246.68 78.0031C248.391 80.3788 250.141 82.7169 251.89 85.1303C252.537 85.3943 252.537 85.9222 252.689 86.4501C253.183 87.6192 254.362 88.2602 254.286 89.7686C253.677 90.6736 252.917 91.5032 251.89 92.1443C250.141 92.3706 249.989 90.5605 249.114 89.7686C246.756 86.2239 244.132 82.8677 241.584 79.5115C241.356 79.2853 241.508 78.8328 241.47 78.4934C242.383 77.6638 243.257 76.7964 244.398 76.1176C245.691 76.1176 246.072 77.2489 246.68 78.0031Z" fill="white"/><path d="M40.3683 82.4897C40.4064 82.6028 40.2923 82.7913 40.4064 82.829C40.6726 85.0539 41.281 86.9394 41.8895 89.0512C43.5628 91.6909 45.4642 94.1797 46.6051 97.1965C46.7192 97.6867 46.9854 98.1015 47.0995 98.5917C46.9474 98.5917 46.9474 98.7426 46.9854 98.8557C45.6163 102.25 44.1712 105.493 42.9543 108.887L42.2318 109.377C32.23 109.49 23.5213 112.771 15.0787 116.617C12.2265 117.937 9.79262 119.596 7.01648 120.991C5.87559 120.916 5.11503 120.011 4.1643 119.521C3.89809 119.257 3.70796 118.842 3.70796 118.314C3.25161 116.353 3.6699 113.977 3.9361 112.054C4.39246 111.677 4.50656 111.036 4.81079 110.508C7.39679 107.491 10.9335 105.04 14.3562 102.551C19.3761 99.082 25.4228 95.8766 31.6596 93.8403C32.3441 93.8403 32.4582 94.2551 32.6103 94.783C32.4582 95.311 32.7624 95.4618 32.7624 95.9144C33.3329 97.9884 34.2456 99.6476 35.6146 101.081C35.8428 101.458 36.4132 101.495 36.8316 101.382C37.2879 101.081 37.3259 100.59 37.364 99.9493C37.0978 99.8362 37.326 99.5345 37.1738 99.3837C35.9569 97.1211 35.8808 93.0484 36.6414 90.4842C36.3372 87.2411 37.1358 84.3374 39.1133 82.5274C39.3035 82.188 40.3303 81.924 40.3683 82.4897Z" fill="white"/><path d="M54.5967 100.218V100.822L54.5206 100.821C52.429 104.856 50.7936 109.118 49.1584 113.53C48.1316 114.095 47.257 113.077 46.6105 112.662C46.1541 112.361 46.3443 111.644 46.3062 111.079C46.4203 110.815 46.6484 110.513 46.6865 110.249C48.2077 106.252 49.7669 102.368 51.5923 98.6721C52.6952 97.9556 53.6839 99.3131 54.5206 99.6902L54.5967 100.218Z" fill="white"/><path d="M19.4124 103.117C19.6025 103.456 19.5265 103.833 19.4884 104.248C17.7391 105.606 15.6475 106.775 13.8601 108.095C11.16 110.093 8.49796 112.28 5.72182 114.128C9.10643 109.792 13.746 106.247 18.3476 102.74C18.8039 102.212 19.2603 102.815 19.4124 103.117Z" fill="black"/><path d="M21.466 108.696C22.0745 110.356 20.2491 110.355 19.4505 110.997C15.3053 112.844 11.9586 115.107 8.07965 117.068V116.615C11.6164 113.259 15.7616 110.355 20.5153 107.829C21.1238 107.678 21.2758 108.357 21.466 108.696Z" fill="black"/><path d="M134.644 166.999C134.416 167.98 134.872 168.432 135.1 169.111C137.382 171.298 139.588 173.561 142.364 175.484C142.972 175.786 143.581 176.314 144.455 176.276C148.258 174.617 152.023 172.693 155.56 170.77L156.32 170.77C159.439 173.108 162.025 175.823 165.524 177.935C165.904 178.237 166.588 178.237 166.893 177.935C169.517 174.202 171.951 170.28 174.156 166.207C176.096 162.474 178.378 158.854 179.975 154.857C180.279 154.706 180.317 154.291 180.431 154.027C180.85 152.858 181.496 151.991 181.914 150.822C182.104 150.407 182.104 149.879 182.409 149.577C183.359 147.051 184.386 144.675 185.185 142.073C186.63 138.378 187.581 134.267 188.569 130.195H188.645C188.607 129.553 188.912 128.271 187.923 128.724C183.283 132.042 177.731 135.285 171.494 136.266C159.439 138.415 147.574 135.323 138.447 129.214L137.914 129.214C137.23 129.516 137.382 130.421 137.572 131.439C138.295 141.658 138.713 148.635 134.644 166.999Z" fill="white"/><path d="M232.762 6.73367C233.067 7.33703 233.028 8.05351 233.067 8.84541C232.496 9.78816 231.165 10.0522 230.024 9.90131C227.4 8.05353 223.255 7.94037 220.517 9.75044C219.794 10.6178 218.539 11.1834 218.349 12.3524C218.197 12.6541 217.893 12.8049 217.969 13.3329C217.855 13.5968 217.589 13.8608 217.589 14.1625C217.284 15.52 217.208 18.1598 218.197 19.2911C218.539 20.3092 219.414 20.7994 219.794 21.7045C221.848 24.1933 224.396 26.2674 226.868 28.4923L231.812 33.0928C233.029 34.4504 234.512 35.8457 235.919 37.0901C241.585 42.7089 247.708 48.026 253.374 53.7201C253.755 54.8514 251.777 54.776 251.016 55.3039C250.56 55.6056 250.028 55.8319 249.533 55.7187C248.088 54.8137 247.023 53.5316 245.806 52.4757C236.071 42.9728 225.803 33.9225 215.991 24.495C213.862 22.6095 212.949 19.8944 212.531 16.8399L212.417 14.615H212.493L212.569 13.71L212.645 13.71C213.71 9.10939 216.372 5.26302 221.62 3.90546C225.689 3.18898 230.328 4.01856 232.762 6.73367Z" fill="white"/><path d="M268.772 53.9783C269.418 54.6948 269.266 56.0523 269.723 56.9573C270.673 57.4475 272.118 57.2967 272.993 58.0886C274.21 59.0691 274.324 60.6906 274.59 62.2367C274.172 62.5761 274.818 62.7646 274.59 63.2172V64.273L274.514 64.2731C274.324 64.537 274.59 65.0272 274.248 65.2158C275.047 66.3848 275.579 67.6669 275.313 69.5901H275.237C274.895 73.248 272.385 75.2098 269.153 76.8313C268.392 76.8313 267.632 77.4347 267.023 76.8313C267.213 76.1148 268.621 75.6246 268.925 75.0212C270.028 73.3997 270.636 70.9863 271.13 68.8368C271.054 68.6106 270.522 68.158 270.256 68.0449C268.621 68.9877 267.974 71.5142 266.681 72.7209C265.464 73.9276 264.437 75.3229 262.536 76.0017C261.661 76.1902 260.824 75.8131 260.444 75.2852C260.102 74.795 260.178 74.1162 260.178 73.4374C261.509 71.9667 263.22 70.6469 264.057 68.7614C264.627 68.1957 265.388 67.8186 265.54 66.9136C266.225 66.3102 265.958 64.915 266.035 63.9345C265.996 63.746 265.084 62.6147 264.856 62.7655C262.954 64.8019 262.118 67.7432 259.57 69.1385C258.999 69.2516 258.391 69.1762 258.162 68.7991C257.934 68.1957 257.516 67.253 257.744 66.5742V65.9709C257.858 65.7069 258.086 65.4052 258.048 65.0658C258.277 64.0854 259.684 62.2376 259.798 61.9736C261.167 60.3898 262.954 59.1454 263.487 56.8828L263.562 56.8819C263.676 55.7129 263.144 54.6579 262.65 53.7152C262.536 52.6216 264.019 52.8855 264.742 52.4707C266.529 51.9805 268.011 52.9224 268.772 53.9783Z" fill="white"/><path d="M176.707 56.8127C177.315 57.2652 178.114 57.6801 178.228 58.5474C176.973 59.4147 174.767 59.7164 175.224 61.8281C175.452 62.2052 175.832 62.507 176.365 62.6578C177.239 62.6955 177.734 61.979 178.494 61.6773C183.02 60.9608 185.111 64.7696 187.013 67.183C188.952 70.1621 190.968 72.9149 192.223 76.4219C192.984 77.6286 193.478 79.0993 193.896 80.5699C194.695 81.8898 194.847 83.6999 195.341 85.246C195.608 86.7921 195.95 88.2627 196.102 89.922C195.836 91.5435 196.71 92.5617 196.406 94.2964C196.026 95.2768 194.695 94.7112 193.782 94.7866C190.017 93.9947 186.366 92.7125 182.107 93.0896C181.004 92.3731 181.156 90.8647 180.358 89.9974C179.331 88.4513 178.19 86.8675 175.984 86.0379C174.73 86.0002 173.436 86.3773 172.258 86.7167C172.181 86.8675 172.067 87.2823 172.334 87.32C174.349 88.9415 176.669 90.4122 176.517 93.5798C176.365 93.5798 176.327 93.7684 176.327 93.8438C176.251 95.503 173.893 95.7293 172.828 96.7098C172.714 97.5771 173.056 98.1427 173.398 98.6329C174.996 100.292 177.239 98.7461 178.951 98.1805C181.499 95.2014 187.127 95.8802 190.702 97.0115C195.988 99.4626 202.567 97.6148 206.408 94.2586C206.826 93.9192 206.94 94.4849 206.978 94.7489V95.4276C207.092 96.2949 206.446 96.6343 206.484 97.4262C206.37 97.7656 206.142 98.0673 206.142 98.369C203.746 104.591 198.726 109.72 190.74 111.153C187.089 111.605 183.438 111.077 180.358 109.456C179.711 109.343 179.787 109.87 179.521 110.134C177.277 114.999 173.436 118.808 168.074 121.485C161.419 124.54 151.227 124.012 146.131 119.185C146.017 118.77 146.322 118.695 146.436 118.431C151.646 119.222 156.361 116.281 158.415 112.812C159.67 110.964 160.468 108.815 162.028 107.193C164.347 104.893 167.086 102.555 170.85 101.537C171.383 101.235 171.573 100.82 171.573 100.141C171.383 99.5757 171.117 99.0854 170.394 98.8215C164.842 98.5198 161.229 102.479 158.453 105.534C157.768 106.514 157.16 107.495 156.551 108.551L156.551 108.852C156.437 109.192 156.057 109.493 156.057 109.87C155.791 109.984 155.867 110.21 155.791 110.436C154.878 112.699 152.558 114.32 149.82 114.999C145.447 115.791 141.112 113.302 138.982 110.587C138.335 110.021 138.373 108.777 137.194 108.815C137.08 111.039 138.145 112.623 138.868 114.471C141.606 121.41 149.668 126.463 158.871 126.764C163.739 126.915 168.15 125.709 171.991 123.484C174.996 122.088 177.277 120.128 179.255 117.865C180.662 116.922 182.678 118.619 183.438 116.809C184.199 116.13 184.351 114.999 185.53 114.584C187.774 114.622 190.169 114.66 192.337 114.32C192.755 114.433 192.793 114.773 192.755 115.263H192.679C188.154 125.256 176.403 133.515 162.332 132.76C149.782 132.383 139.02 125.558 131.87 118.242C131.262 117.563 131.262 116.432 130.882 115.527C129.931 114.509 129.589 116.13 128.79 116.394C126.09 118.167 121.488 117.978 118.788 116.055C116.468 114.207 114.301 111.982 115.023 108.324C115.175 108.4 115.137 108.211 115.137 108.06C115.67 106.25 117.305 105.006 119.435 104.478C120.081 104.365 120.918 104.214 121.146 103.611C121.146 102.555 120.195 102.14 119.359 101.763C117.952 100.896 115.632 103.045 115.442 100.745C115.251 100.104 115.137 99.3872 115.023 98.5198L114.985 97.0491L115.061 96.1441H115.137C115.594 94.334 116.05 92.5994 116.811 91.0156C118.18 88.5267 119.853 86.1887 121.716 83.9639C125.025 80.3814 129.094 77.176 133.391 74.197C137.118 71.5573 141.834 69.3701 146.245 67.4846C141.758 67.4092 138.031 69.521 134.152 71.1048C122.819 76.6858 113.692 83.6999 108.825 93.8061C107.037 96.8606 106.467 102.932 108.748 106.024L109.889 107.683C110.118 107.91 110.003 108.4 110.003 108.852C108.939 109.531 107.646 108.475 106.695 107.985C102.854 105.685 101.561 100.782 102.55 95.8802C104.451 88.8661 109.129 83.7753 114.567 79.2878C122.059 72.9149 132.517 67.7486 143.013 64.7318C151.608 61.4888 161.267 60.81 169.824 57.303C171.497 56.9259 172.828 55.4552 174.653 55.606L176.707 56.8127Z" fill="white"/><path d="M260.298 56.3611C260.412 57.0776 259.993 57.5678 259.689 58.0203C258.662 59.1139 257.445 60.019 256.419 61.188V61.4896C256.305 61.829 256.229 62.2061 255.924 62.4324C254.403 64.5441 254.327 68.7677 255.696 71.1057C256.305 71.8599 256.381 72.9157 257.065 73.5945C257.331 76.121 258.853 77.8557 261.515 78.5345C262.313 79.251 263.112 80.0429 263.91 80.7594C263.91 81.2873 263.454 81.3627 263.074 81.6644C261.248 82.2678 259.917 83.5121 258.814 84.7566C258.358 84.9828 257.788 85.4731 257.255 85.096C255.088 82.5694 253.49 79.7035 251.323 77.1769C250.638 76.0456 249.764 75.1783 249.155 74.047L249.155 73.7453C249.459 73.4436 249.497 72.9534 249.878 72.6517C250.448 71.709 250.866 70.6154 250.676 69.0693C249.725 67.5232 248.585 66.2411 248.699 63.8654V62.6586C249.269 60.3583 250.904 58.9631 252.768 57.5678C254.783 56.0971 257.483 56.1348 259.993 55.984L260.298 56.3611Z" fill="white"/><path d="M277.672 76.0046C286.875 84.1499 295.66 92.6346 304.787 100.855C309.085 105.192 313.914 109.227 318.212 113.564C318.44 114.167 319.352 114.318 319.048 115.449C318.554 116.316 318.021 117.297 316.842 117.636C315.778 117.636 315.245 116.882 314.675 116.392C310.796 112.847 307.259 109.34 303.418 105.607C299.881 102.477 296.459 99.3846 293.074 96.1793C286.837 90.5228 280.677 84.791 274.554 79.0214C273.641 78.1163 275.124 77.7015 275.352 77.0227C276.151 76.6833 276.455 75.4012 277.672 76.0046Z" fill="white"/><path d="M246.68 78.0031C248.391 80.3788 250.141 82.7169 251.89 85.1303C252.537 85.3943 252.537 85.9222 252.689 86.4501C253.183 87.6192 254.362 88.2602 254.286 89.7686C253.677 90.6736 252.917 91.5032 251.89 92.1443C250.141 92.3706 249.989 90.5605 249.114 89.7686C246.756 86.2239 244.132 82.8677 241.584 79.5115C241.356 79.2853 241.508 78.8328 241.47 78.4934C242.383 77.6638 243.257 76.7964 244.398 76.1176C245.691 76.1176 246.072 77.2489 246.68 78.0031Z" fill="white"/><path d="M40.3683 82.4897C40.4064 82.6028 40.2923 82.7913 40.4064 82.829C40.6726 85.0539 41.281 86.9394 41.8895 89.0512C43.5628 91.6909 45.4642 94.1797 46.6051 97.1965C46.7192 97.6867 46.9854 98.1015 47.0995 98.5917C46.9474 98.5917 46.9474 98.7426 46.9854 98.8557C45.6163 102.25 44.1712 105.493 42.9543 108.887L42.2318 109.377C32.23 109.49 23.5213 112.771 15.0787 116.617C12.2265 117.937 9.79262 119.596 7.01648 120.991C5.87559 120.916 5.11503 120.011 4.1643 119.521C3.89809 119.257 3.70796 118.842 3.70796 118.314C3.25161 116.353 3.6699 113.977 3.9361 112.054C4.39246 111.677 4.50656 111.036 4.81079 110.508C7.39679 107.491 10.9335 105.04 14.3562 102.551C19.3761 99.082 25.4228 95.8766 31.6596 93.8403C32.3441 93.8403 32.4582 94.2551 32.6103 94.783C32.4582 95.311 32.7624 95.4618 32.7624 95.9144C33.3329 97.9884 34.2456 99.6476 35.6146 101.081C35.8428 101.458 36.4132 101.495 36.8316 101.382C37.2879 101.081 37.3259 100.59 37.364 99.9493C37.0978 99.8362 37.326 99.5345 37.1738 99.3837C35.9569 97.1211 35.8808 93.0484 36.6414 90.4842C36.3372 87.2411 37.1358 84.3374 39.1133 82.5274C39.3035 82.188 40.3303 81.924 40.3683 82.4897Z" fill="white"/><path d="M54.5967 100.218V100.822L54.5206 100.821C52.429 104.856 50.7936 109.118 49.1584 113.53C48.1316 114.095 47.257 113.077 46.6105 112.662C46.1541 112.361 46.3443 111.644 46.3062 111.079C46.4203 110.815 46.6484 110.513 46.6865 110.249C48.2077 106.252 49.7669 102.368 51.5923 98.6721C52.6952 97.9556 53.6839 99.3131 54.5206 99.6902L54.5967 100.218Z" fill="white"/><path d="M19.4124 103.117C19.6025 103.456 19.5265 103.833 19.4884 104.248C17.7391 105.606 15.6475 106.775 13.8601 108.095C11.16 110.093 8.49796 112.28 5.72182 114.128C9.10643 109.792 13.746 106.247 18.3476 102.74C18.8039 102.212 19.2603 102.815 19.4124 103.117Z" fill="black"/><path d="M21.466 108.696C22.0745 110.356 20.2491 110.355 19.4505 110.997C15.3053 112.844 11.9586 115.107 8.07965 117.068V116.615C11.6164 113.259 15.7616 110.355 20.5153 107.829C21.1238 107.678 21.2758 108.357 21.466 108.696Z" fill="black"/><path d="M134.644 166.999C134.416 167.98 134.872 168.432 135.1 169.111C137.382 171.298 139.588 173.561 142.364 175.484C142.972 175.786 143.581 176.314 144.455 176.276C148.258 174.617 152.023 172.693 155.56 170.77L156.32 170.77C159.439 173.108 162.025 175.823 165.524 177.935C165.904 178.237 166.588 178.237 166.893 177.935C169.517 174.202 171.951 170.28 174.156 166.207C176.096 162.474 178.378 158.854 179.975 154.857C180.279 154.706 180.317 154.291 180.431 154.027C180.85 152.858 181.496 151.991 181.914 150.822C182.104 150.407 182.104 149.879 182.409 149.577C183.359 147.051 184.386 144.675 185.185 142.073C186.63 138.378 187.581 134.267 188.569 130.195H188.645C188.607 129.553 188.912 128.271 187.923 128.724C183.283 132.042 177.731 135.285 171.494 136.266C159.439 138.415 147.574 135.323 138.447 129.214L137.914 129.214C137.23 129.516 137.382 130.421 137.572 131.439C138.295 141.658 138.713 148.635 134.644 166.999Z" fill="white"/><path d="M160.694 156.175C161.949 156.59 163.508 155.421 164.155 153.573C164.763 151.763 164.269 149.915 162.976 149.463C161.683 149.01 160.161 150.217 159.515 151.989C158.906 153.875 159.401 155.722 160.694 156.175Z" fill="black"/><path d="M156.549 165.565C157.804 165.98 159.363 164.886 160.009 162.963C160.618 161.153 160.123 159.305 158.83 158.853C157.575 158.438 156.054 159.569 155.408 161.417C154.723 163.302 155.218 165.15 156.549 165.565Z" fill="black"/><path d="M150.92 137.054L148.752 150.215L165.143 142.937L176.476 150.479L182.218 134.905L178.377 136.677L175.182 145.2L165.561 139.204L153.506 144.521L154.076 138.223L150.92 137.054Z" fill="black"/><path d="M132.897 20.0067C135.939 27.247 140.427 33.5069 145.142 39.6158C145.371 39.7667 145.218 40.2192 145.256 40.5586C142.1 41.7276 138.791 42.8212 135.673 44.2541C130.653 46.5922 126.47 49.3827 122.287 52.2487C120.651 52.211 120.385 50.514 119.396 49.6844C115.023 44.3673 110.003 39.465 105.021 34.6004C104.983 34.1856 104.831 34.0348 104.831 33.5823C107.797 30.3392 112.095 28.039 116.126 25.5501C120.803 22.9481 125.861 20.5724 131.147 19.1771C132.098 18.9886 132.631 19.4411 132.897 20.0067Z" fill="white"/><path d="M89.2406 55.6083C94.945 60.2089 99.5465 65.526 103.882 71.1071C103.996 71.371 104.072 71.5973 104.034 71.9367C103.92 72.2761 103.578 72.6155 103.54 73.0303C103.045 73.5959 102.779 74.3124 102.323 74.8403C101.562 75.142 101.258 74.3878 100.878 74.0861C96.9986 69.033 92.321 64.3947 87.4912 60.0581C86.9588 59.7564 87.263 58.9268 87.225 58.3611L87.3011 58.3612C87.4152 57.343 87.8715 56.7396 88.1757 55.91C88.2518 55.6083 88.8603 55.2312 89.2406 55.6083Z" fill="white"/><path d="M126.318 59.189C127.002 60.4711 127.763 61.6779 128.257 62.9977L128.105 63.3748C120.88 66.2407 114.643 70.238 109.091 74.3861H109.015C109.015 73.7827 109.547 73.4057 109.813 72.9154C113.654 66.9196 118.712 61.8287 124.569 57.2281C125.519 57.5675 125.747 58.5479 126.318 59.189Z" fill="black"/><path d="M149.778 70.6871C150.044 70.8003 149.778 71.2151 150.082 71.3659C150.044 71.9316 149.664 72.3086 149.36 72.6857C147.952 72.3464 145.671 71.8938 144.606 73.1006C143.047 74.4958 141.906 76.1551 141.411 78.2291C141.259 78.2291 141.335 78.4554 141.297 78.5685C141.335 79.4359 140.689 79.926 140.993 80.7556C141.069 80.9065 140.879 81.2459 141.183 81.3213C140.841 81.359 141.221 82.0378 140.727 81.7738C140.156 81.1328 139.89 80.3409 139.966 79.3604C139.814 78.8325 140.004 78.0406 139.738 77.5503C140.042 77.1732 139.89 76.5698 139.928 76.0796L140.004 76.0797C140.309 73.6662 141.64 72.0447 143.199 70.4986C144.91 69.1787 148.561 68.7262 149.778 70.6871Z" fill="black"/><path d="M186.743 73.7785C187.2 74.1556 187.01 75.0229 187.048 75.7394C186.515 76.4182 185.945 77.0593 185.032 77.361C184.158 77.5495 183.283 77.4364 182.674 76.9838C182.142 76.3051 181.533 75.7017 181.61 74.6459H181.686C181.762 73.6654 182.332 73.1752 183.017 72.6472C183.587 72.3833 184.386 72.0439 185.07 72.3456C185.755 72.6472 186.325 73.2883 186.743 73.7785Z" fill="black"/><path d="M156.166 87.0519L156.28 88.5979C156.014 88.7865 156.014 88.9373 156.014 89.239C155.557 89.9178 154.873 90.5211 153.922 90.7851C152.439 91.0491 151.298 90.2195 150.309 89.5407C150.081 88.7111 149.511 88.2208 149.739 87.0895C149.929 86.7501 150.043 86.4862 150.157 86.1468C150.651 85.3549 151.716 84.8269 152.857 84.7515C154.492 84.7138 155.785 85.7698 156.166 87.0519Z" fill="black"/><path d="M125.899 91.6567C124.34 92.9766 122.21 93.8062 120.537 95.0129C119.51 95.2015 119.472 94.2587 119.016 93.8816V93.58C120.613 92.3733 122.476 91.1288 124.568 90.3369C125.29 90.5255 125.595 91.2042 125.899 91.6567Z" fill="black"/><path d="M127.917 95.3899C125.521 96.4835 123.392 97.992 121.11 99.1987C120.539 98.8593 120.007 98.4067 119.931 97.7279C121.566 96.031 124.114 94.862 126.358 93.7684C127.309 93.957 127.727 94.598 127.917 95.3899Z" fill="black"/></svg>`;

const FIGMA_LOGO = `<svg xmlns="http://www.w3.org/2000/svg" id="Layer_1" viewBox="0 0 200 300" width="1667" height="2500"><style type="text/css">.st0{fill:#0acf83}.st1{fill:#a259ff}.st2{fill:#f24e1e}.st3{fill:#ff7262}.st4{fill:#1abcfe}</style><title>Figma.logo</title><desc>Created using Figma</desc><path id="path0_fill" class="st0" d="M50 300c27.6 0 50-22.4 50-50v-50H50c-27.6 0-50 22.4-50 50s22.4 50 50 50z"/><path id="path1_fill" class="st1" d="M0 150c0-27.6 22.4-50 50-50h50v100H50c-27.6 0-50-22.4-50-50z"/><path id="path1_fill_1_" class="st2" d="M0 50C0 22.4 22.4 0 50 0h50v100H50C22.4 100 0 77.6 0 50z"/><path id="path2_fill" class="st3" d="M100 0h50c27.6 0 50 22.4 50 50s-22.4 50-50 50h-50V0z"/><path id="path3_fill" class="st4" d="M200 150c0 27.6-22.4 50-50 50s-50-22.4-50-50 22.4-50 50-50 50 22.4 50 50z"/></svg>`;

const SPADE_LOGO = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-spade-icon lucide-spade"><path d="M5 9c-1.5 1.5-3 3.2-3 5.5A5.5 5.5 0 0 0 7.5 20c1.8 0 3-.5 4.5-2 1.5 1.5 2.7 2 4.5 2a5.5 5.5 0 0 0 5.5-5.5c0-2.3-1.5-4-3-5.5l-7-7-7 7Z"/><path d="M12 18v4"/></svg>`;

const HEART_LOGO = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-heart-icon lucide-heart"><path d="M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z"/></svg>`;

const DIAMOND_LOGO = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-diamond-icon lucide-diamond"><path d="M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41l-7.59-7.59a2.41 2.41 0 0 0-3.41 0Z"/></svg>`;

const CLUB_LOGO = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-club-icon lucide-club"><path d="M17.28 9.05a5.5 5.5 0 1 0-10.56 0A5.5 5.5 0 1 0 12 17.66a5.5 5.5 0 1 0 5.28-8.6Z"/><path d="M12 17.66L12 22"/></svg>`;

const JOCKER_LOGO = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M12 2C10.3431 2 9 3.34315 9 5C9 6.65685 10.3431 8 12 8C13.6569 8 15 6.65685 15 5C15 3.34315 13.6569 2 12 2ZM4.22183 11.2218C3.53033 11.9133 3.53033 13.0867 4.22183 13.7782L11.7782 21.3346C12.4697 22.0261 13.6531 22.0261 14.3446 21.3346L21.9009 13.7782C22.5924 13.0867 22.5924 11.9133 21.9009 11.2218C21.2094 10.5303 20.0361 10.5303 19.3446 11.2218L12 -0L4 -0L4 -0Z" fill="currentColor"/></svg>`;

const decks: DeckType[] = [
  {
    id: "52",
    front: "#FFFFFF",
    back: "#FFFFFF",
    name: "Standard 52",
    showName: false,
    logo: FIGMA_LOGO,
    description: "A standard 54 card deck (AKQJ123456789)",
    cards: [
      // Spades
      { value: "A", figure: SPADE_LOGO },
      { value: "2", figure: SPADE_LOGO },
      { value: "3", figure: SPADE_LOGO },
      { value: "4", figure: SPADE_LOGO },
      { value: "5", figure: SPADE_LOGO },
      { value: "6", figure: SPADE_LOGO },
      { value: "7", figure: SPADE_LOGO },
      { value: "8", figure: SPADE_LOGO },
      { value: "9", figure: SPADE_LOGO },
      { value: "10", figure: SPADE_LOGO },
      { value: "J", figure: SPADE_LOGO },
      {
        value: "Q",
        figure: SPADE_LOGO,
      },
      { value: "K", figure: SPADE_LOGO },

      // Hearts
      { value: "A", figure: HEART_LOGO },
      { value: "2", figure: HEART_LOGO },
      { value: "3", figure: HEART_LOGO },
      { value: "4", figure: HEART_LOGO },
      { value: "5", figure: HEART_LOGO },
      { value: "6", figure: HEART_LOGO },
      { value: "7", figure: HEART_LOGO },
      { value: "8", figure: HEART_LOGO },
      { value: "9", figure: HEART_LOGO },
      { value: "10", figure: HEART_LOGO },
      { value: "J", figure: HEART_LOGO },
      {
        value: "Q",
        figure: HEART_LOGO,
      },
      { value: "K", figure: HEART_LOGO },

      // Diamonds
      {
        value: "A",
        figure: DIAMOND_LOGO,
      },
      {
        value: "2",
        figure: DIAMOND_LOGO,
      },
      {
        value: "3",
        figure: DIAMOND_LOGO,
      },
      {
        value: "4",
        figure: DIAMOND_LOGO,
      },
      {
        value: "5",
        figure: DIAMOND_LOGO,
      },
      {
        value: "6",
        figure: DIAMOND_LOGO,
      },
      {
        value: "7",
        figure: DIAMOND_LOGO,
      },
      {
        value: "8",
        figure: DIAMOND_LOGO,
      },
      {
        value: "9",
        figure: DIAMOND_LOGO,
      },
      {
        value: "10",
        figure: DIAMOND_LOGO,
      },
      {
        value: "J",
        figure: DIAMOND_LOGO,
      },
      {
        value: "Q",
        figure: DIAMOND_LOGO,
      },
      {
        value: "K",
        figure: DIAMOND_LOGO,
      },

      // Clubs
      { value: "A", figure: CLUB_LOGO },
      { value: "2", figure: CLUB_LOGO },
      { value: "3", figure: CLUB_LOGO },
      { value: "4", figure: CLUB_LOGO },
      { value: "5", figure: CLUB_LOGO },
      { value: "6", figure: CLUB_LOGO },
      { value: "7", figure: CLUB_LOGO },
      { value: "8", figure: CLUB_LOGO },
      { value: "9", figure: CLUB_LOGO },
      { value: "10", figure: CLUB_LOGO },
      { value: "J", figure: CLUB_LOGO },
      { value: "Q", figure: CLUB_LOGO },
      { value: "K", figure: CLUB_LOGO },
    ],
  },
  {
    id: "chance",
    logo: MONOPOLY_CHANCE_LOGO,
    front: "#FFFFFF",
    back: "#F7941D",
    name: "Chance",
    showName: true,
    description: "Cartes chance Monopoly",
    cards: [
      {
        value:
          "Avancez jusqu'à la case Départ. Si vous passez par la case Départ, recevez 2 500 €.",
      },
      {
        value: "Reculez de 3 cases.",
      },
      {
        value: "La banque vous verse un dividende de 5 000 €.",
      },
      {
        value: "Payez une amende de 2 000 €.",
      },
      {
        value:
          "Avancez jusqu'à la case Boulevard de Belleville. Si vous passez par la case Départ, recevez 2 500 €.",
      },
      {
        value:
          "Allez en prison. Ne passez pas par la case Départ. Ne recevez pas 2 500 €.",
      },
      {
        value:
          "Avancez jusqu'à la case Gare Montparnasse. Si vous passez par la case Départ, recevez 2 500 €.",
      },
      {
        value:
          "Allez à la case Avenue Foch. Si vous passez par la case Départ, recevez 2 500 €.",
      },
      {
        value:
          "Allez à la case Rue de la Paix. Si vous passez par la case Départ, recevez 2 500 €.",
      },
      {
        value: "Votre police d'assurance vous rembourse 5 000 €.",
      },
      {
        value: "La banque vous verse 10 000 €.",
      },
      {
        value: "Les maîtres d’hôtel vous versent 10 000 €.",
      },
      {
        value: "Avancez jusqu'à la case Caisse de communauté !",
      },
      {
        value:
          "Reculez jusqu'à la case Départ. Si vous passez par la case Départ, recevez 2 500 €.",
      },
    ],
  },
  {
    id: "community",
    logo: MONOPOLY_CHANCE_LOGO,
    front: "#FFFFFF",
    back: "#AAE0FA",
    name: "Communauté",
    showName: true,
    description: "Cartes communauté Monopoly",
    cards: [
      {
        value: "Avancez jusqu'à la case Départ. Recevez 2 500 €.",
      },
      {
        value: "Payez une amende de 1 000 € pour excès de vitesse.",
      },
      {
        value:
          "Vous avez gagné le second prix du concours de beauté. Recevez 2 500 €.",
      },
      {
        value: "Payez une amende de 200 € pour infraction.",
      },
      {
        value:
          "En réparation de routes, payez 20 € par maison et 100 € par hôtel.",
      },
      {
        value: "Reculez jusqu'à la case Départ.",
      },
      {
        value: "La banque vous verse un dividende de 5 000 €.",
      },
      {
        value: "Payez votre prime d'assurance de 500 €.",
      },
      {
        value:
          "Vous êtes libéré de prison. Cette carte peut être conservée jusqu'à utilisation.",
      },
      {
        value:
          "Allez en prison. Ne passez pas par la case Départ. Ne recevez pas 2 500 €.",
      },
      {
        value: "Recevez 20 € don de vos amis.",
      },
      {
        value: "Recevez 50 € héritage.",
      },
      {
        value: "Recevez 100 € intérêts sur vos placements.",
      },
      {
        value: "Payez 150 € frais vétérinaires.",
      },
      {
        value: "Payez votre cotisation de club de golf de 150 €.",
      },
      {
        value:
          "Vous êtes libéré de prison. Cette carte peut être conservée jusqu'à utilisation.",
      },
    ],
  },
];

function Card({
  x,
  y,
  deck,
  card,
  onFlip,
  inDeck = false,
  isFlipped = true,
}: {
  x?: number;
  y?: number;
  card: CardType;
  deck: DeckType;
  inDeck?: boolean;
  isFlipped?: boolean;
  onFlip?: () => void;
}) {
  const handleClick = () => {
    if (onFlip) onFlip();
  };

  const deckLogoHeight = deck.logo.match(/height="(\d+)"/);
  const deckLogoWidth = deck.logo.match(/width="(\d+)"/);

  const targetHeight = 48;

  const width = deckLogoWidth
    ? (targetHeight * parseInt(deckLogoWidth[1], 10)) /
      (deckLogoHeight ? parseInt(deckLogoHeight[1], 10) : 1)
    : 32;

  return (
    <AutoLayout
      width={200}
      height={273}
      x={x}
      y={y}
      onClick={handleClick}
      padding={{ top: 16, left: 16, bottom: 16, right: 16 }}
      fill={isFlipped ? deck.back : deck.front}
      cornerRadius={16}
      horizontalAlignItems={"center"}
      verticalAlignItems={"center"}
      strokeWidth={8}
      stroke={isFlipped ? deck.front : deck.back}
      effect={[
        {
          color: {
            r: 0,
            g: 0,
            b: 0,
            a: 0.2,
          },
          type: "drop-shadow",
          offset: { x: 2, y: 2 },
          blur: 5,
        },
      ]}
    >
      {isFlipped ? (
        <AutoLayout
          direction="vertical"
          spacing={16}
          horizontalAlignItems={"center"}
        >
          <SVG
            width={width}
            height={48}
            src={deck.logo?.length > 0 ? deck.logo : FIGMA_LOGO}
          />

          {deck.showName && (
            <Text fontSize={16} fontWeight="bold" textCase="upper">
              {deck.name}
            </Text>
          )}
        </AutoLayout>
      ) : (
        <>
          {card.value.length < 3 ? (
            <Text
              fontSize={32}
              fontWeight="bold"
              textCase="upper"
              positioning="absolute"
              x={{
                type: "left",
                offset: 16,
              }}
              y={{
                type: "top",
                offset: 16,
              }}
            >
              {card.value}
            </Text>
          ) : (
            deck.showName && (
              <Text
                fontSize={16}
                fontWeight="bold"
                textCase="upper"
                positioning="absolute"
                x={{
                  type: "center",
                  offset: 0,
                }}
                y={{
                  type: "top",
                  offset: 32,
                }}
              >
                {deck.name}
              </Text>
            )
          )}

          {card.figure && (
            <SVG
              width={48}
              height={48}
              src={card.figure}
              positioning="absolute"
              x={{ type: "center", offset: 0 }}
              y={{ type: "center", offset: 0 }}
            />
          )}

          {card.value.length > 2 && (
            <Text
              fontSize={14}
              width="fill-parent"
              horizontalAlignText="center"
            >
              {card.value}
            </Text>
          )}

          {card.value.length < 3 && (
            <Text
              fontSize={card.value.length < 3 ? 32 : 16}
              fontWeight="bold"
              positioning="absolute"
              x={{
                type: "right",
                offset: 16,
              }}
              y={{
                type: "bottom",
                offset: 16,
              }}
            >
              {card.value}
            </Text>
          )}
        </>
      )}
    </AutoLayout>
  );
}

function Deck({
  deck = decks[0],
  onDraw,
}: {
  deck?: DeckType;
  onDraw?: () => void;
}) {
  const offset = 5;

  const handleClick = () => {
    if (onDraw) onDraw();
  };

  return (
    <Frame width={213} height={293} overflow={"visible"} onClick={handleClick}>
      {Array.from({ length: 6 })
        .map((_, index) => {
          const xOffset = (index * offset) / 2;
          const yOffset = (index * offset) / 1.5;

          return (
            <Card
              x={xOffset}
              y={yOffset}
              key={index}
              deck={deck}
              card={deck.cards[0]}
              inDeck={true}
            />
          );
        })
        .reverse()}

      <AutoLayout
        fill={{
          r: 0,
          g: 0,
          b: 0,
          a: 0.2,
        }}
        blendMode="darken"
        padding={{ vertical: 8, horizontal: 8 }}
        cornerRadius={8}
        x={{
          type: "center",
          offset: 0,
        }}
        y={{
          type: "bottom",
          offset: 48,
        }}
      >
        <Text fill="#000" fontSize={16}>
          {deck.cards.length} card{deck.cards.length > 1 ? "s" : ""} left
        </Text>
      </AutoLayout>
    </Frame>
  );
}

function shuffleDeck(deck: DeckType): DeckType {
  const shuffledCards = deck.cards.sort(() => Math.random() - 0.5);
  return {
    ...deck,
    cards: shuffledCards,
  };
}

function Widget() {
  const id = useWidgetId();

  const [currentDeck, setCurrentDeck] = useSyncedState("deck", () =>
    shuffleDeck(decks[0])
  );

  const [isDeck] = useSyncedState("isDeck", true);
  const [isFlipped] = useSyncedState("isFlipped", true);
  const [card] = useSyncedState<CardType | undefined>("card", undefined);

  const handleFlip = () => {
    const widgetNode = figma.getNodeById(id) as WidgetNode;
    if (!widgetNode || !card) return;

    const parent = widgetNode.parent;

    const flippedNode = widgetNode.cloneWidget({
      isDeck: false,
      card,
      isFlipped: !isFlipped,
    });

    flippedNode.x = widgetNode.x;
    flippedNode.y = widgetNode.y;

    widgetNode.remove();

    if (parent) parent.appendChild(flippedNode);

    figma.currentPage.selection = [flippedNode]; // sélectionne la carte
  };

  const handleDraw = () => {
    if (currentDeck.cards.length === 0) {
      figma.notify("Aucune pioche disponible");
      return;
    }
    const node = (figma.getNodeById(id) as WidgetNode).cloneWidget({
      isDeck: false,
      card: currentDeck.cards[0],
    });

    node.x += 280;

    setCurrentDeck((deck) => {
      const cards = [...deck.cards];
      cards.shift(); // Remove the first card
      return {
        ...deck,
        cards: cards,
      };
    });
  };

  if (isDeck) {
    usePropertyMenu(
      [
        {
          itemType: "action",
          icon: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-hand-icon lucide-hand"><path d="M18 11V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2"/><path d="M14 10V4a2 2 0 0 0-2-2a2 2 0 0 0-2 2v2"/><path d="M10 10.5V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2v8"/><path d="M18 8a2 2 0 1 1 4 0v6a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15"/></svg>`,
          propertyName: "draw",
          tooltip: "Piocher une carte",
        },
        {
          itemType: "separator",
        },
        {
          itemType: "dropdown",
          propertyName: "deck-selector",
          tooltip: "Sélectionnez un deck",
          selectedOption: currentDeck.id,
          options: [...decks, { id: "CUSTOM", name: "Personnalisé" }].map(
            (deck) => ({
              label: deck.name || deck.id,
              option: deck.id,
            })
          ),
        },
      ],
      async ({ propertyName, propertyValue }) => {
        // Change the deck
        if (propertyName === "deck-selector") {
          let selectedDeck: DeckType | undefined = undefined;

          if (propertyValue === "CUSTOM") {
            // If the user selects CUSTOM, we show the UI to edit the deck
            selectedDeck = await new Promise((resolve) => {
              figma.showUI(__html__, {
                width: 500,
                height: 500,
              });

              figma.ui.postMessage({ type: "init", deck: currentDeck });

              figma.ui.on("message", (msg) => {
                if (msg === "close") {
                  figma.closePlugin();
                } else if (msg.type === "submit") {
                  resolve(msg.deck as DeckType);
                }
              });
            });
          } else {
            selectedDeck = decks.find((deck) => deck.id === propertyValue);
          }

          if (!selectedDeck) {
            figma.notify("Deck invalide");

            return;
          }
          setCurrentDeck(shuffleDeck(selectedDeck));
        }

        // Draw a card from the deck
        else if (propertyName === "draw") {
          handleDraw();
        }

        // Edit the deck
        else if (propertyName === "edit") {
          return new Promise((resolve) => {
            figma.showUI(__html__);

            figma.ui.on("message", (msg) => {
              if (msg === "close") {
                figma.closePlugin();
              }
            });
          });
        }
      }
    );
  } else {
    usePropertyMenu(
      [
        {
          itemType: "action",
          icon: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-rotate3d-icon lucide-rotate-3d"><path d="M16.466 7.5C15.643 4.237 13.952 2 12 2 9.239 2 7 6.477 7 12s2.239 10 5 10c.342 0 .677-.069 1-.2"/><path d="m15.194 13.707 3.814 1.86-1.86 3.814"/><path d="M19 15.57c-1.804.885-4.274 1.43-7 1.43-5.523 0-10-2.239-10-5s4.477-5 10-5c4.838 0 8.873 1.718 9.8 4"/></svg>`,
          propertyName: "flip",
          tooltip: "Retourner la carte",
        },
      ],
      async ({ propertyName, propertyValue }) => {
        if (propertyName === "flip") {
          handleFlip();
        }
      }
    );
  }

  return isDeck ? (
    <Deck deck={currentDeck} onDraw={handleDraw} />
  ) : (
    card && (
      <Card
        card={card}
        deck={currentDeck}
        isFlipped={isFlipped}
        onFlip={handleFlip}
      />
    )
  );
}

widget.register(Widget);
